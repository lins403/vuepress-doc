(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{492:function(t,v,_){"use strict";_.r(v);var r=_(43),a=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),_("p",[t._v("好的算法：正确性、健壮性、可读性、高效性")]),t._v(" "),_("h2",{attrs:{id:"算法效率"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法效率"}},[t._v("#")]),t._v(" 算法效率")]),t._v(" "),_("ul",[_("li",[t._v("时间效率\n"),_("ul",[_("li",[t._v("渐进时间复杂度："),_("code",[t._v("T(n) = O(f(n))")]),t._v("，数量级O，问题规模n")])])]),t._v(" "),_("li",[t._v("空间效率：执行过程中所耗费的存储空间\n"),_("ul",[_("li",[t._v("渐进空间复杂度："),_("code",[t._v("S(n) = O(f(n))")])])])])]),t._v(" "),_("p",[t._v("n在不同数据结构的表示：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("类型")]),t._v(" "),_("th",[t._v("n指的是")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("排序")]),t._v(" "),_("td",[t._v("记录数")])]),t._v(" "),_("tr",[_("td",[t._v("矩阵")]),t._v(" "),_("td",[t._v("矩阵的阶数")])]),t._v(" "),_("tr",[_("td",[t._v("多项式")]),t._v(" "),_("td",[t._v("多项式的项数")])]),t._v(" "),_("tr",[_("td",[t._v("集合")]),t._v(" "),_("td",[t._v("元素个数")])]),t._v(" "),_("tr",[_("td",[t._v("树")]),t._v(" "),_("td",[t._v("树的结点个数")])]),t._v(" "),_("tr",[_("td",[t._v("图")]),t._v(" "),_("td",[t._v("图的顶点数或边数")])])])]),t._v(" "),_("h3",{attrs:{id:"复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th"),t._v(" "),_("th",[t._v("名称")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("O(1)")]),t._v(" "),_("td",[t._v("常量")]),t._v(" "),_("td",[t._v("无论多少值，执行时间都不变。表示简单值和保存在变量中的值")])]),t._v(" "),_("tr",[_("td",[t._v("O(logn)")]),t._v(" "),_("td",[t._v("对数")]),t._v(" "),_("td",[t._v("执行时间随着值的增加而增加，但算法完成不需要读取每个值。例子:二分查找")])]),t._v(" "),_("tr",[_("td",[t._v("O(n)")]),t._v(" "),_("td",[t._v("线性")]),t._v(" "),_("td",[t._v("执行时间与值的数量直接相关。例子:迭代数组的所有元素")])]),t._v(" "),_("tr",[_("td",[t._v("O(n"),_("sup",[t._v("2")]),t._v(")")]),t._v(" "),_("td",[t._v("二次方")]),t._v(" "),_("td",[t._v("执行时间随着值的增加而增加，而且每个值至少要读取 n 次。例子:插入排序")])])])]),t._v(" "),_("h2",{attrs:{id:"常用算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用算法"}},[t._v("#")]),t._v(" 常用算法")]),t._v(" "),_("p",[t._v("动态规划（DP，Dynamic programming，动态规划的实质是记忆）")]),t._v(" "),_("p",[t._v("回溯（Backtrack，DFS深度优先搜索）")]),t._v(" "),_("p",[t._v("分治")])])}),[],!1,null,null,null);v.default=a.exports}}]);