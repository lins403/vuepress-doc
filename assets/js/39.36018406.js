(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{440:function(t,a,r){"use strict";r.r(a);var v=r(43),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"操作系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),r("h2",{attrs:{id:"进程和线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程"}},[t._v("#")]),t._v(" 进程和线程")]),t._v(" "),r("h3",{attrs:{id:"进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),r("p",[t._v("应用程序的执行实例，每一个进程都是由私有的虚拟地址空间、代码、数据和其他系统资源所组成。")]),t._v(" "),r("ul",[r("li",[t._v("资源分配的最小单位")]),t._v(" "),r("li",[t._v("使用独立的内存单元")])]),t._v(" "),r("h3",{attrs:{id:"线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[t._v("#")]),t._v(" 线程")]),t._v(" "),r("p",[t._v("线程是进程内的一个独立执行单元，在不同的线程之间是可以共享进程资源的。")]),t._v(" "),r("ul",[r("li",[t._v("程序执行的最小单位。一个程序至少有一个进程，一个进程至少有一个线程。")]),t._v(" "),r("li",[t._v("多个线程共享内存，极大的提高了程序的运行效率")]),t._v(" "),r("li",[t._v("多线程由应用程序控制而不是操作系统")]),t._v(" "),r("li",[t._v("JavaScript是单线程的。而 Web Worker 虽然可以创建新线程执行任务，但创建的子线程完全受控于主线程，且位于外部文件中，无法访问DOM和window上的属性，所以它并没有改变js单线程的本质。")])]),t._v(" "),r("h2",{attrs:{id:"crlf-和-lf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#crlf-和-lf"}},[t._v("#")]),t._v(" CRLF 和 LF")]),t._v(" "),r("p",[r("code",[t._v("CRLF")]),t._v("（carriage return line feed ：回车换行）"),r("code",[t._v("\\r\\n")]),t._v(" ，windows系统环境下的换行方式")]),t._v(" "),r("p",[r("code",[t._v("LF")]),t._v("（line feed） "),r("code",[t._v("\\n")]),t._v("， Linux下的换行方式")]),t._v(" "),r("h2",{attrs:{id:"二进制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二进制"}},[t._v("#")]),t._v(" 二进制")]),t._v(" "),r("h3",{attrs:{id:"原码、反码和补码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原码、反码和补码"}},[t._v("#")]),t._v(" 原码、反码和补码")]),t._v(" "),r("p",[t._v("原码是计算机中对数字的二进制的定点表示方法，最高位表示符号位，其余位表示数值位。优点是易于分辨，缺点是不能够直接参与运算。在计算机中使用补码来表示负数，这样就可以将加法运算扩展到所有的数值计算上，因此在数字电路中我们只需要考虑加法器的设计就行了，而不用再为减法设置新的数字电路。")]),t._v(" "),r("p",[t._v("正数的反码和其原码一样；负数的反码，符号位为1，数值部分按原码取反。")]),t._v(" "),r("p",[t._v("正数的补码和其原码一样；负数的补码为其反码加1。")])])}),[],!1,null,null,null);a.default=_.exports}}]);