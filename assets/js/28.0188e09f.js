(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{429:function(t,s,a){"use strict";a.r(s);var e=a(43),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),a("h2",{attrs:{id:"xml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xml"}},[t._v("#")]),t._v(" XML")]),t._v(" "),a("p",[a("code",[t._v("XML")]),t._v("（Extensible Markup Language，可扩展标记语言），是一种标记语言。XML 曾一度是在互联网上 "),a("u",[t._v("存储和传输")]),t._v(" 结构化数据的标准， JSON 格式用于取代 XML 格式进行服务器和网页之间的数据交换。")]),t._v(" "),a("p",[a("code",[t._v("HTML")]),t._v("（HyperText Markup Language，超文本标记语言），是一种用于创建网页的标准标记语言。")]),t._v(" "),a("p",[a("code",[t._v("DOM")]),t._v(" （文档对象模型）是HTML 和 XML 文档的编程接口，但 DOM 标准不仅是为了在浏览器中使用，而且还为了在桌面和服务器应用程序中处理 XML 数据结构")]),t._v(" "),a("p",[a("code",[t._v("XHTML")]),t._v("（Extensible HyperText Markup Language，可扩展超文本标记语言），是使用 XML1.0 改写自 HTML4.01 的独立语言。它不再被作为单独标准开发。")]),t._v(" "),a("p",[a("code",[t._v("XPath")]),t._v("（XML Path Language，XML路径语言），用来确定XML文档中某部分位置。XPath 是为了在 DOM 文档中定位特定节点而创建的。")]),t._v(" "),a("h2",{attrs:{id:"知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),a("h3",{attrs:{id:"语义化标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语义化标签"}},[t._v("#")]),t._v(" 语义化标签")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("<head>")]),t._v("中的 title 和元数据 meta 标签等，利于SEO")]),t._v(" "),a("li",[t._v("aside、section、article、footer等，可读性，便于阅读和代码的规范性")]),t._v(" "),a("li",[t._v("code、pre、cite、blockquote等，有实际渲染意义，参照markdown")])]),t._v(" "),a("h3",{attrs:{id:"doctype-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doctype-声明"}},[t._v("#")]),t._v(" <!DOCTYPE> 声明")]),t._v(" "),a("p",[a("code",[t._v("<!DOCTYPE>")]),t._v(" 声明不是 HTML 标签，用它来指示以何种方式来渲染页面")]),t._v(" "),a("p",[t._v("HTML 4.01 中有三种声明，在 HTML5 中只有一种："),a("code",[t._v("<!DOCTYPE html>")])]),t._v(" "),a("h3",{attrs:{id:"script-标签中的-defer-和-async-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-标签中的-defer-和-async-属性"}},[t._v("#")]),t._v(" script 标签中的 "),a("code",[t._v("defer")]),t._v(" 和 "),a("code",[t._v("async")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[t._v("浏览器在后台加载脚本，然后继续解析HTML构建DOM")]),t._v(" "),a("li",[a("code",[t._v("async")]),t._v(" 异步加载，加载完成时执行，不会阻塞页面的解析。下载完成就立马执行，不保证执行的顺序。\n"),a("ul",[a("li",[t._v("async脚本会在"),a("u",[t._v("加载完成时执行")]),t._v("，且完全独立，独立于DOM和其它脚本，不能确保执行次序")]),t._v(" "),a("li",[a("u",[t._v("适用于独立脚本")]),t._v("，例如计数器或广告，这些脚本的相对执行顺序无关紧要")]),t._v(" "),a("li",[t._v("保证会在页面的 "),a("code",[t._v("load")]),t._v(" 事件前执行，但可能会在 DOMContentLoaded 之前或之后")])])]),t._v(" "),a("li",[a("code",[t._v("defer")]),t._v(" 脚本的加载与页面的解析同步，但文档完成解析后才会执行；defer脚本可以保证按添加的顺序执行\n"),a("ul",[a("li",[t._v("defer特性仅适用于外部脚本，如果<script> 脚本没有 src，则会忽略 defer 特性")]),t._v(" "),a("li",[t._v("defer脚本将推迟执行，直到"),a("u",[t._v("文档完成解析后")]),t._v("，触发 "),a("code",[t._v("DOMContentLoaded")]),t._v(" 事件前执行。")]),t._v(" "),a("li",[t._v("defer脚本"),a("u",[t._v("可以确保按照文档顺序执行")]),t._v("，即使第二个defer脚本先下载完成，也要等待第一个defer脚本下载完成后执行")]),t._v(" "),a("li",[a("u",[t._v("适用于需要整个 DOM 的脚本")]),t._v("，以及脚本的相对执行顺序很重要的时候")])])])]),t._v(" "),a("p",[t._v("异步加载JS方式，除了使用"),a("code",[t._v("defer")]),t._v(" 和 "),a("code",[t._v("async")]),t._v(" 属性，还可以使用立即执行函数动态创建script标签然后加载外部js")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" scriptEle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javasctipt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("async "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://cdn.bootcss.com/jquery/3.0.0-beta1/jquery.min.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"head"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scriptEle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"link-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link-标签"}},[t._v("#")]),t._v(" link 标签")]),t._v(" "),a("p",[t._v("规定了当前文档与外部资源的关系")]),t._v(" "),a("p",[a("code",[t._v("rel")]),t._v(" 属性 —  names a relationship of the linked document to the current document.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("rel=preload")]),t._v("：告诉浏览器要预加载这个资源。")]),t._v(" "),a("li",[a("code",[t._v("rel=prefetch")]),t._v("：告诉浏览器这个资源空闲的时候给我加载一下。(因为它可能被用户加载，即懒加载)")]),t._v(" "),a("li",[a("code",[t._v('rel="icon"')]),t._v(" 、"),a("code",[t._v('rel="stylesheet"')])])]),t._v(" "),a("p",[a("code",[t._v("as")]),t._v(" 属性 — Potential destination for a preload request")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("as=script")]),t._v("：告诉浏览器这个资源是script，提升加载的优先级。")])]),t._v(" "),a("p",[t._v("🌰demo："),a("a",{attrs:{href:"https://lins403.github.io/vuepress-doc/notesList/vue/vue-cli/vue-cli.html#index-html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SPA打包后的index.html"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("crossorigin")]),t._v("属性 — 表示该资源是否应该使用一个CORS请求来获取")]),t._v(" "),a("p",[a("code",[t._v("href")]),t._v("属性")]),t._v(" "),a("p",[a("code",[t._v("media")]),t._v("属性 — 规定了外部资源适用的媒体类型，资源将只在满足媒体条件的情况下才被加载进来")]),t._v(" "),a("h3",{attrs:{id:"特殊标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特殊标签"}},[t._v("#")]),t._v(" 特殊标签")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("<dt>")]),t._v(", "),a("code",[t._v("<dd>")]),t._v(" description描述")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<svg>")]),t._v(", "),a("code",[t._v("<symbol>")]),t._v(", ...")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);