(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{417:function(t,v,a){"use strict";a.r(v);var r=a(43),_=Object(r.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"总结回顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结回顾"}},[t._v("#")]),t._v(" 总结回顾")]),t._v(" "),a("p",[t._v("ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现。")]),t._v(" "),a("p",[a("code",[t._v("NaN")]),t._v(" 属于Number类型，字面意思not a number表示并非一个数字，所以NaN不等于任何一个值，包括它自身。")]),t._v(" "),a("p",[t._v("JavaScript没有字符类型，要表示一个字符，只需要创建仅包含一个字符的字符串。")]),t._v(" "),a("p",[t._v("基本数据类型的赋值（=）是在内存中新开辟一段栈内存，然后再把再将值赋值到新的栈中")]),t._v(" "),a("h2",{attrs:{id:"runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runtime"}},[t._v("#")]),t._v(" runtime")]),t._v(" "),a("p",[t._v("JavaScript的代码语句通常是自上而下的按顺序执行，但是可以通过条件语句（if、switch）、循环语句（for、while、do）、强制跳转语句（break、return、throw）、函数调用等方式来改变执行序列。")]),t._v(" "),a("p",[t._v("代码块是包在一对花括号中的一组语句，但JavaScript中的代码块不会创建新的作用域。在es6引入块作用域以前，JavaScript只有全局作用域和函数作用域。")]),t._v(" "),a("p",[t._v("循环语句（初始化从句initialization、条件从句condition、增量从句increment）")]),t._v(" "),a("h2",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ol",[a("li",[t._v("弱类型")]),t._v(" "),a("li",[t._v("原型继承，对象可以直接从其它对象继承属性")])]),t._v(" "),a("p",[t._v("所有对象都有原型，这句话是错的，例如用 "),a("code",[t._v("Object.create(null)")]),t._v(" 创建的对象就没有原型。")]),t._v(" "),a("p",[t._v("JavaScript中每个对象都连接到一个原型对象，并且它可以从中继承属性和方法。")]),t._v(" "),a("p",[t._v("原型链的特性，允许对象继承另一个对象的属性和方法，正确使用它可以减少对象初始化时消耗的时间和内存。")]),t._v(" "),a("p",[t._v("每个构造函数都有一个"),a("strong",[t._v("原型对象")]),t._v(" "),a("code",[t._v("prototype")]),t._v("，原型对象有一个"),a("code",[t._v("constructor")]),t._v("属性指回构造函数。而实例对象有一个内部指针"),a("code",[t._v("[[prototype]]")]),t._v("（"),a("strong",[t._v("原型指针")]),t._v("）指向原型 "),a("code",[t._v("person1.__proto__ === Person.prototype")])]),t._v(" "),a("h2",{attrs:{id:"《javascript语言精粹》"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#《javascript语言精粹》"}},[t._v("#")]),t._v(" 《JavaScript语言精粹》")]),t._v(" "),a("h3",{attrs:{id:"精粹特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#精粹特性"}},[t._v("#")]),t._v(" 精粹特性")]),t._v(" "),a("p",[t._v("精简的JavaScript包括以下主要内容：")]),t._v(" "),a("ol",[a("li",[t._v("函数是顶级对象，可以看作是有词法作用域的闭包（lambda）【ES6以前只有全局作用域和函数作用域，不同于其它类C语言，JavaScript的代码块语法只有函数会创建新的作用域。ES6以前没有块级作用域的时候，通常变量声明在函数内的顶层】")]),t._v(" "),a("li",[t._v("基于原型继承的动态对象\n"),a("ul",[a("li",[t._v("对象是无类别的。我们可以通过普通的赋值方式给对象添加一个新的成员属性；一个对象可以从另一个对象继承成员属性【原型、原型指针、原型链】。")]),t._v(" "),a("li",[t._v("【也可以通过构造函数接收参数，并给实例对象添加属性。注意定义在构造函数内部的方法不能为实例所共享，所以通常定义在prototype上】")])])]),t._v(" "),a("li",[t._v("对象字面量和数组字面量\n"),a("ul",[a("li",[t._v("JavaScript字面量是JSON格式的灵感来源")])])])])])}),[],!1,null,null,null);v.default=_.exports}}]);