(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{467:function(t,a,s){"use strict";s.r(a);var n=s(43),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[t._v("#")]),t._v(" 术语")]),t._v(" "),s("h3",{attrs:{id:"职位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#职位"}},[t._v("#")]),t._v(" 职位")]),t._v(" "),s("ul",[s("li",[t._v("PM: Product Manager，产品经理")]),t._v(" "),s("li",[t._v("RD: Research and Development engineer，研发工程师")]),t._v(" "),s("li",[t._v("QA: Quality Assurance，品质保证")]),t._v(" "),s("li",[t._v("WLB: Work and Life Balance")])]),t._v(" "),s("h3",{attrs:{id:"幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幂等性"}},[t._v("#")]),t._v(" 幂等性")]),t._v(" "),s("p",[t._v("表示执行相同的操作，结果也是相同的。例如 HTTP 中 GET 请求是幂等的，而 POST 请求不是")]),t._v(" "),s("h2",{attrs:{id:"一、工程化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、工程化"}},[t._v("#")]),t._v(" 一、工程化")]),t._v(" "),s("h3",{attrs:{id:"前端工作流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端工作流"}},[t._v("#")]),t._v(" 前端工作流")]),t._v(" "),s("ol",[s("li",[t._v("技术选型")]),t._v(" "),s("li",[t._v("搭建开发环境")]),t._v(" "),s("li",[t._v("项目部署\n"),s("ul",[s("li",[t._v("代码管理")]),t._v(" "),s("li",[t._v("配置站点")]),t._v(" "),s("li",[t._v("项目骨骼搭建")])])]),t._v(" "),s("li",[t._v("代码编写\n"),s("ul",[s("li",[t._v("静态页面重构")]),t._v(" "),s("li",[t._v("js公共组件封装")]),t._v(" "),s("li",[t._v("编写js业务代码")])])]),t._v(" "),s("li",[t._v("代码质量管控\n"),s("ul",[s("li",[t._v("规范化 - 建立代码规范与Code Review制度")]),t._v(" "),s("li",[t._v("自动化 - 使用工具自动检查代码质量")]),t._v(" "),s("li",[t._v("流程化 - 将代码质量检查与代码流动过程绑定")]),t._v(" "),s("li",[t._v("中心化 - 以团队整体为视角，集中管理代码规范，并实现质量状况透明化")])])]),t._v(" "),s("li",[t._v("联调")]),t._v(" "),s("li",[t._v("跟踪测试")]),t._v(" "),s("li",[t._v("代码优化，性能优化")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29302809",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅谈web前端工作流"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/7024000916990754829",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端工程工作流规范"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"无代码与低代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无代码与低代码"}},[t._v("#")]),t._v(" 无代码与低代码")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("低代码，是一种可以让开发者依托平台快速搭建企业信息化的系统，在这过程中，使用者只需要少量的代码编写，其他的大部分工作都是通过可视化的拖拽、点选完成。")])]),t._v(" "),s("li",[s("p",[t._v("无代码，或称零代码，是一种完全不需要任何代码编程的开发方式，它主要是围绕企业数据和业务管理需求，通过可视化方式设计数据结构，用户交互形式、设置访问权限和定义工作流程的平台。")])])]),t._v(" "),s("h3",{attrs:{id:"技术负债"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术负债"}},[t._v("#")]),t._v(" 技术负债")]),t._v(" "),s("p",[t._v("Technical debt (also known as tech debt or code debt) describes what results when development teams take actions to expedite the delivery of a piece of functionality or a project which later needs to be refactored. In other words, it’s the result of prioritizing speedy delivery over perfect code.")]),t._v(" "),s("h3",{attrs:{id:"基准测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基准测试"}},[t._v("#")]),t._v(" 基准测试")]),t._v(" "),s("p",[t._v("当更新同一应用程序（包括软件、硬件、网络和代码更改）时，它将再次通过性能测试，并且新的性能指标结果与以前的性能指标结果进行比较。")]),t._v(" "),s("h3",{attrs:{id:"可维护性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可维护性"}},[t._v("#")]),t._v(" 可维护性")]),t._v(" "),s("p",[t._v("容易理解、符合常识、容易适配、容易扩展、容易调试")]),t._v(" "),s("ol",[s("li",[t._v("编程规范")]),t._v(" "),s("li",[t._v("松散耦合")]),t._v(" "),s("li",[t._v("编码惯例")])]),t._v(" "),s("h3",{attrs:{id:"ux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ux"}},[t._v("#")]),t._v(" UX")]),t._v(" "),s("p",[t._v("user experience 用户体验")]),t._v(" "),s("h3",{attrs:{id:"页面可插拔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面可插拔"}},[t._v("#")]),t._v(" 页面可插拔")]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("h3",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),s("ul",[s("li",[t._v("Behavioral-Driven Development (BDD)")]),t._v(" "),s("li",[t._v("Test-Driven Development (TDD)")]),t._v(" "),s("li",[t._v("Unit Test")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5b2da89cf265da597f1c7cab",target:"_blank",rel:"noopener noreferrer"}},[t._v("《浅谈前端单元测试》"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"代码转译与编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码转译与编译"}},[t._v("#")]),t._v(" 代码转译与编译")]),t._v(" "),s("ul",[s("li",[t._v("“转译”(transpilation) 例如ES6转ES5")]),t._v(" "),s("li",[t._v("“编译”(compilation)")])]),t._v(" "),s("p",[t._v("编译是将源代码从一种语言转换为另一种语言。转译在本质上跟编译是一样的，只是目标语言与源语言是一种语言的不同级别的抽象。")]),t._v(" "),s("h2",{attrs:{id:"二、功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、功能"}},[t._v("#")]),t._v(" 二、功能")]),t._v(" "),s("h3",{attrs:{id:"伪变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪变量"}},[t._v("#")]),t._v(" 伪变量")]),t._v(" "),s("p",[t._v("指的是在服务端执行虚拟DOM(一般用Node.js variable")]),t._v(" "),s("p",[t._v("foobar, foo, bar, baz, qux, quux, quuz, corge, grault, garply, waldo, fred, plugh, xyzzy, and thud;")]),t._v(" "),s("h3",{attrs:{id:"盗链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盗链"}},[t._v("#")]),t._v(" 盗链")]),t._v(" "),s("p",[t._v("盗链是指在自己的页面上展示一些并不在自己服务器上的内容")]),t._v(" "),s("h3",{attrs:{id:"repl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repl"}},[t._v("#")]),t._v(" REPL")]),t._v(" "),s("p",[t._v("read-eval-print-loop，读取 - 求值 - 打印 - 循环")]),t._v(" "),s("p",[t._v("浏览器控制台是个REPL运行时，与页面的 JavaScript 运行时并发。在控制台中执行的命令可以像页面级 JavaScript 一样访问全局和各种 API。控制台中可以执行任意数量的代码，与它可能会阻塞的任何页面级代码一样。修改、对象和回调都会保留在 DOM 和运行时中。")]),t._v(" "),s("h3",{attrs:{id:"gwt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gwt"}},[t._v("#")]),t._v(" GWT")]),t._v(" "),s("p",[t._v("Google Web Toolkit，是一个前端使用 JavaScript，后端使用 "),s("strong",[t._v("Java")]),t._v(" 的 AJAX framework")]),t._v(" "),s("p",[t._v("GWT透过编译器将Java代码编译成JavaScript，可让开发人员使用Java程序设计语言，快速建置与维护复杂但高性能的JavaScript前端应用程序，借此减轻开发人员负担。")]),t._v(" "),s("h3",{attrs:{id:"dsl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dsl"}},[t._v("#")]),t._v(" DSL")]),t._v(" "),s("p",[t._v("DSL（domain specific language），即领域专用语言：专门解决某一特定问题的计算机语言，比如大家耳熟能详的 SQL 和正则表达式。")]),t._v(" "),s("h3",{attrs:{id:"域名分片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域名分片"}},[t._v("#")]),t._v(" 域名分片")]),t._v(" "),s("p",[t._v("在一个域名下分出多个二级域名，而它们都指向同样的一台服务器，比如 blog.xiaomixi.com 、code.xiaomixi.com。")]),t._v(" "),s("h2",{attrs:{id:"三、编程设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、编程设计模式"}},[t._v("#")]),t._v(" 三、编程设计模式")]),t._v(" "),s("h3",{attrs:{id:"同构应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同构应用"}},[t._v("#")]),t._v(" 同构应用")]),t._v(" "),s("p",[t._v("SSR：服务端渲染，指的是服务端直接吐出具有数据的HTML页面，而不是在客户端拼接的HTML。相对的则是CSR(客户端渲染)，客户端渲染指的是在客户端通过Ajax请求来拼装数据，此时所有页面是在客户端拼接好的。")]),t._v(" "),s("p",[t._v("前端同构应用：一套代码，既可以客户端渲染，又可以服务端渲染。指的是在服务端执行虚拟DOM(一般用Node.js，不过其它语言也具备这项能力，之前前端程序员用JS比较多)，此时前端和服务端的渲染层是同一套代码，因为服务端使用和前端相同的虚拟DOM的原理拼接HTML模板，所以前端同构应用一般也是SSR。")]),t._v(" "),s("p",[t._v("同构渲染：一个前端项目里的组件，部分由服务端渲染后输出，部分由客户端异步渲染。这样可以保障网页渲染速度，也有利于搜索引擎 SEO。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.zhihu.com/question/379831174/answer/1085552892",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端同构应用和 SSR 有什么区别？"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"控制反转模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#控制反转模式"}},[t._v("#")]),t._v(" 控制反转模式")]),t._v(" "),s("p",[s("strong",[t._v("控制反转")]),t._v("（英语：Inversion of Control，缩写为IoC），是面向对象编程中的一种设计原则，可以用来减低计算机代码之间的耦合度。")]),t._v(" "),s("p",[t._v("实现控制反转主要有两种方式：依赖注入和依赖查找。两者的区别在于，")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("依赖注入（Dependency Injection，DI）是"),s("strong",[t._v("被动")]),t._v("的接收对象，在类A的实例创建过程中即创建了依赖的B对象，通过类型或名称来判断将不同的对象注入到不同的属性中。")])]),t._v(" "),s("li",[s("p",[t._v("依赖查找（Dependency Lookup）是"),s("strong",[t._v("主动")]),t._v("索取相应类型的对象，获得依赖对象的时间也可以在代码中自由控制。")])])]),t._v(" "),s("p",[t._v("IoC，对于spring框架来说，就是由spring来负责控制对象的生命周期和对象间的关系。对于某个具体的对象而言，以前是由它控制其他对象，现在是所有对象都被spring控制，所以这叫控制反转。")]),t._v(" "),s("p",[t._v("IoC的一个重点是，在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过依赖注入来实现的，而spring中具体注入方式是通过反射（reflection）来实现的。")]),t._v(" "),s("blockquote",[s("p",[t._v("控制反转IoC是说创建对象的控制权进行转移，以前创建对象的主动权和创建时机是由自己把控的，而现在这种权力转移到第三方，比如转移交给了IoC容器，它就是一个专门用来创建对象的工厂，你要什么对象，它就给你什么对象，有了 IoC 容器，依赖关系就变了，原先的依赖关系就没了，它们都依赖IoC容器了，通过IoC容器来建立它们之间的关系。")])]),t._v(" "),s("h3",{attrs:{id:"达夫设备-duff-s-device"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#达夫设备-duff-s-device"}},[t._v("#")]),t._v(" 达夫设备 Duff’s Device")]),t._v(" "),s("p",[t._v("循环次数太少时，展开循环直接同步执行比循环性能更高，但又不能提前预知循环的次数时，可以使用达夫设备这一技术。")]),t._v(" "),s("p",[t._v("达夫设备的基本思路是以 8 的倍数作为迭代次数从而将循环展开为一系列语句，能够加快大数据集的处理速度。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" leftover "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 余数部分执行一个循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftover "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("leftover "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 剩余每轮循环执行8次，能够加快大数据集的处理速度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("iterations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"数据对齐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据对齐"}},[t._v("#")]),t._v(" 数据对齐")]),t._v(" "),s("ul",[s("li",[t._v("数据对齐是指内存字节的对齐（现代计算机中内存空间都是按照byte划分），数据所在的内存地址必须是该数据长度的整数倍")]),t._v(" "),s("li",[t._v("数据对齐并不是操作系统的内存结构的一部分，而是CPU结构的一部分")]),t._v(" "),s("li",[t._v("数据对齐是为了读取数据的效率。当CPU访问正确对齐的数据时，它的运行效率最高")])]),t._v(" "),s("h2",{attrs:{id:"其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),s("p",[t._v("投入产出比")])])}),[],!1,null,null,null);a.default=e.exports}}]);