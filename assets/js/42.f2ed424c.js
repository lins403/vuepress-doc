(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{442:function(t,s,a){"use strict";a.r(s);var e=a(43),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-使用技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-使用技巧"}},[t._v("#")]),t._v(" Git 使用技巧")]),t._v(" "),a("h2",{attrs:{id:"一、black-tech"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、black-tech"}},[t._v("#")]),t._v(" 一、Black-tech")]),t._v(" "),a("h3",{attrs:{id:"git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),a("ul",[a("li",[t._v("对未push的最近一条commit，使用 "),a("code",[t._v("git commit --amend")]),t._v(" 命令修改提交消息。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 中间要隔开一行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("description"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("不加参数，比较工作区与暂存区\n--cached 比较暂存区与最新本地版本库\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" commit-id "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),a("p",[t._v("git commit 保存快照，而 checkout 本质上是去操作HEAD指针，用快照内容覆盖工作目录和暂存区。")]),t._v(" "),a("p",[t._v("从历史commit，或者Index暂存区中，拷贝文件到工作区，也可以用于切换分支。")]),t._v(" "),a("h3",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以执行多次")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("stash_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会把工作区和暂存区的改动都恢复到工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop --index    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会把工作区和暂存区的改动都恢复到工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("stash_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-cherry-pick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[t._v("#")]),t._v(" git cherry-pick")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将指定commit应用于当前分支，用于不同分支的同步修改")]),t._v("\n")])])]),a("h3",{attrs:{id:"git-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("--ff        默认情况采用fast-forward模式【快进模式，不会产生新的merge commit】\n--no-ff        即使可以使用fast-forward模式，也要创建一个新的合并节点\n--squash    合并中间的commit【所有修改被保存到工作区，需要重新commit，导致原来commit的author信息会丢失】\n--abort        终止产生冲突的合并\n--no-commit    合并后不自动commit\n")])])]),a("blockquote",[a("p",[t._v("个人而言，单个分支用 "),a("code",[t._v("git fetch & git merge")]),t._v("，多个分支合并中，自己的分支同步主分支使用 "),a("code",[t._v("git rebase")]),t._v("，主分支合并pull request 用常规的 no-ff")])]),t._v(" "),a("h3",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("合并多次提交纪录，减少了无用的提交信息，保持分支整洁")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并最近的 4 次提交纪录，-i开启交互，还可以自定义合并，例如合并第2第3条")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i HEAD~4\n")])])])]),t._v(" "),a("li",[a("p",[t._v("分支合并，相比 merge 来说会减少分支合并的记录（但如果feature这个分支也有其他人在使用，则会造成一定困扰）")]),t._v(" "),a("p",[t._v("把分支的冲突在本地解决了以后，远端 pr 合并时管理员不需要在解决冲突")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 🌰:同步dev的commit至dev-lin")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev-lin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase dev        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 交互式：git rebase -i master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更复杂的分支合并情况")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于dev-lin分支创建feature分支，将feature分支上的commit直接应用在dev上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --onto dev dev-lin feature\n")])])])]),t._v(" "),a("li",[a("p",[t._v("同个分支的合并")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有本地的commit和远端已经fetch下来的commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把本地的分支rebase到origin的这个分支上，然后再commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 就不会像merge那样多出一条commit信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase\n")])])])]),t._v(" "),a("li",[a("p",[t._v("指定多个commit的分支合并（有点问题⚠️）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不用cherry-pick")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假如 master 落后 dev 5个提交，而只想要dev的前3个commit同步到master上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选中dev的第4条commit，新建分支 temp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" switch -c dev "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --onto dev temp master\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"git-revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" git revert")]),t._v(" "),a("ul",[a("li",[t._v("回滚某个特定commit，相当于恢复")]),t._v(" "),a("li",[t._v("如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程（适用于公共分支）")])]),t._v(" "),a("h3",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("ul",[a("li",[t._v("回滚到某个commit，相当于重置，重置的是这个指定commit以后的所有commit")]),t._v(" "),a("li",[t._v("如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了（适用于个人分支）\n"),a("ul",[a("li",[a("code",[t._v("--mixed")]),t._v(" 默认选项，被回退的修改会放在工作区")]),t._v(" "),a("li",[a("code",[t._v("--soft")]),t._v(" 被回退的修改会被放在暂存区")]),t._v(" "),a("li",[a("code",[t._v("--hard")]),t._v(" 被回退的那些版本的修改会直接舍弃（可以再通过 git reflog 找回，但依然要小心使用）")])])]),t._v(" "),a("li",[t._v("可以用 "),a("code",[t._v("git reset -p")]),t._v(", "),a("code",[t._v("git checkout -p")]),t._v("进入交互模式。")])]),t._v(" "),a("h3",{attrs:{id:"git-撤销修改和版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-撤销修改和版本回退"}},[t._v("#")]),t._v(" git 撤销修改和版本回退")]),t._v(" "),a("p",[t._v("丢弃工作区的修改："),a("code",[t._v("git restore file")]),t._v("（"),a("code",[t._v("git checkout -- file")]),t._v(" ）")]),t._v(" "),a("p",[t._v("从暂存区恢复到工作区："),a("code",[t._v("git restore --staged")]),t._v(" （"),a("code",[t._v("git reset HEAD <file>")]),t._v("）")]),t._v(" "),a("p",[t._v("直接丢弃工作区和暂存区的修改："),a("code",[t._v("git checkout HEAD .")])]),t._v(" "),a("p",[a("code",[t._v("git checkout HEAD~ .")]),t._v(" 将当前提交节点的父节点中的修改复制到暂存区域中，但不影响commit。")]),t._v(" "),a("p",[t._v("已经commit过的：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git reset HEAD~")]),t._v("  退回到工作目录上（等同于HEAD~1）")]),t._v(" "),a("li",[a("code",[t._v("git reset <commit-id>")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("已push的commit用 "),a("code",[t._v("revert")]),t._v("，未push就用 "),a("code",[t._v("reset")]),t._v("（也可以参考在GUI中undo回退到暂存区），否则工作区和暂存区的就使用 "),a("code",[t._v("restore")])])]),t._v(" "),a("h3",{attrs:{id:"git-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),a("p",[t._v("给某一个有特别意义的commit打标签")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建轻量标签（lightweight）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v1.3\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建附注标签（annotated）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.4 -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my version 1.4"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看标签信息和对应的commit信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show v1.4\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 给历史commit打标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d v1.4\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远端")]),t._v("\n")])])]),a("p",[t._v("有更多的意义也可以考虑新建 stable 分支")]),t._v(" "),a("h2",{attrs:{id:"二、git-commit-规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、git-commit-规范"}},[t._v("#")]),t._v(" 二、Git commit 规范")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Git Commit Message Convention")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("revert"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("feat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("fix"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("polish"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("docs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("refactor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("perf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("workflow"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ci"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("chore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),a("ul",[a("li",[a("strong",[t._v("build")]),t._v(": Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)")]),t._v(" "),a("li",[a("strong",[t._v("ci")]),t._v(": Changes to our CI configuration files and scripts")]),t._v(" "),a("li",[a("strong",[t._v("docs")]),t._v(": Documentation only changes")]),t._v(" "),a("li",[a("strong",[t._v("feat")]),t._v(": A new feature")]),t._v(" "),a("li",[a("strong",[t._v("fix")]),t._v(": A bug fix")]),t._v(" "),a("li",[a("strong",[t._v("perf")]),t._v(": A code change that improves performance")]),t._v(" "),a("li",[a("strong",[t._v("refactor")]),t._v(": A code change that neither fixes a bug nor adds a feature")]),t._v(" "),a("li",[a("strong",[t._v("test")]),t._v(": Adding missing tests or correcting existing tests")])]),t._v(" "),a("h3",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[t._v("#")]),t._v(" 工具")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://commitizen.github.io/cz-cli/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen"),a("OutboundLink")],1),t._v("：通过命令行交互的方式生成规范的commit message")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/@commitlint/cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/cli"),a("OutboundLink")],1),t._v("：lint commit message")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmtrends.com/commitizen-vs-commitlint-vs-@commitlint/cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/cli vs commitizen vs commitlint | npm trends"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"三、心得"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、心得"}},[t._v("#")]),t._v(" 三、心得")]),t._v(" "),a("ul",[a("li",[t._v("结合使用GUI客户端（github desktop 、VSCode 插件）")]),t._v(" "),a("li",[t._v("用 git restore、git switch 等新命令取代 checkout")]),t._v(" "),a("li",[t._v("...")])]),t._v(" "),a("h1",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://git-scm.com/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Documentation Reference"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://jartto.wang/2018/12/11/git-rebase/",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底搞懂 Git-Rebase"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/yxlshk/article/details/79944535",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git恢复之前版本的两种方法reset、revert（图文详解）"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/vuejs/vue/blob/dev/.github/COMMIT_CONVENTION.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Commit Message Convention"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular > commit message guidelines"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);s.default=r.exports}}]);