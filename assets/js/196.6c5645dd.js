(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{595:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"深入响应式原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入响应式原理"}},[t._v("#")]),t._v(" 深入响应式原理")]),t._v(" "),a("h2",{attrs:{id:"initstate-vm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initstate-vm"}},[t._v("#")]),t._v(" initState(vm)")]),t._v(" "),a("p",[t._v("初始化，将 data 和 props 的属性添加到 vm 实例上，并给它们添加 "),a("code",[t._v("Observer")]),t._v("，从而将它们变成响应式对象")]),t._v(" "),a("ul",[a("li",[t._v("initProps\n"),a("ul",[a("li",[t._v("在初始化props之前的"),a("code",[t._v("mergeOptions")]),t._v("中，首先会对 "),a("code",[t._v("props")]),t._v(" 做一次 "),a("code",[t._v("normalize")])])])]),t._v(" "),a("li",[t._v("initData")]),t._v(" "),a("li",[t._v("initComputed")]),t._v(" "),a("li",[t._v("initWatch")])]),t._v(" "),a("h2",{attrs:{id:"observer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#observer"}},[t._v("#")]),t._v(" Observer")]),t._v(" "),a("p",[t._v("observe --\x3e new Observer()")]),t._v(" "),a("p",[a("code",[t._v("Observer")]),t._v(" 是一个类（”调度属性绑定和发布订阅“），每一个被观察对象都会被添加一个observer实例（将Observer实例绑定到data的"),a("code",[t._v("__ob__")]),t._v("属性上面去），它的作用是给对象的属性添加 getter 和 setter，用于依赖收集和派发更新；")]),t._v(" "),a("p",[t._v("执行Observer构造函数时：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首先实例化 "),a("code",[t._v("Dep")]),t._v(" 对象")]),t._v(" "),a("ul",[a("li",[t._v("Dep是依赖收集的核心")]),t._v(" "),a("li",[t._v("Dep是一个class，实际上就是对 "),a("code",[t._v("Watcher")]),t._v(" 的一种管理，有一个静态属性 "),a("code",[t._v("target")]),t._v("，这是一个全局唯一的 "),a("code",[t._v("Watcher")])]),t._v(" "),a("li",[t._v("通过Dep.target，保证在同一时间只能有一个全局的 "),a("code",[t._v("Watcher")]),t._v(" 被计算")]),t._v(" "),a("li",[a("code",[t._v("Watcher")]),t._v(" 是一个 Class，在它的构造函数中，定义了一些和 "),a("code",[t._v("Dep")]),t._v(" 相关的属性，用于依赖收集")])])]),t._v(" "),a("li",[a("p",[t._v("接着通过执行 "),a("code",[t._v("def")]),t._v(" 函数把自身实例添加到数据对象 "),a("code",[t._v("value")]),t._v(" 的 "),a("code",[t._v("__ob__")]),t._v(" 属性上")])]),t._v(" "),a("li",[a("p",[t._v("如果是个数组，则会先进行数组遍历，（只）对每一个对象或数组的成员进行observe，但是可以通过使用"),a("code",[t._v("Vue.set")]),t._v("来拓展监听成员")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ccc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无响应式更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无响应式更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以响应式更新")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("defineReactive")]),t._v(" 的功能就是定义一个响应式对象，使用"),a("code",[t._v("Object.defineProperty")]),t._v("给对象的每个属性添加 getter 和 setter")]),t._v(" "),a("ul",[a("li",[t._v("目的就是为了在我们访问数据以及写数据的时候能自动执行一些逻辑")]),t._v(" "),a("li",[t._v("getter 做的事情是依赖收集，setter 做的事情是派发更新")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Dep.target")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("the current target watcher being evaluated. This is globally unique because there could be only one watcher being evaluated at any time.")])]),t._v(" "),a("li",[a("p",[t._v("watcher实例的evaluate方法only gets called for lazy watchers.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*创建计算属性的getter*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createComputedGetter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computedGetter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" watcher "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_computedWatchers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_computedWatchers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*实际是脏检查，在计算属性中的依赖发生改变的时候dirty会变成true，在get的时候重新计算计算属性的输出值*/")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dirty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("evaluate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*依赖收集*/")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("depend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" watcher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"getter和setter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getter和setter"}},[t._v("#")]),t._v(" getter和setter")]),t._v(" "),a("ul",[a("li",[t._v("每个对象值的 getter 都持有一个 "),a("code",[t._v("dep")]),t._v("，在触发 getter 的时候会调用 "),a("code",[t._v("dep.depend()")]),t._v(" 方法，也就会执行 "),a("code",[t._v("Dep.target.addDep(this)")]),t._v("，然后将当前的watcher添加进Dep容器中。")]),t._v(" "),a("li",[t._v("数据变化会触发重新渲染，然后会递归访问实例对象的所有属性，触发所有数据的 getter，这样实际上已经完成了一个依赖收集的过程。")])]),t._v(" "),a("h2",{attrs:{id:"依赖收集和派发更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖收集和派发更新"}},[t._v("#")]),t._v(" 依赖收集和派发更新")]),t._v(" "),a("p",[t._v("使用 Object.defineProperty 方法，给对象添加getter和setter，在getter中通过 "),a("code",[t._v("dep.depend()")]),t._v(" 进行依赖收集。收集依赖的目的是为了当这些响应式数据发生变化，触发它们的 setter 的时候，通过 "),a("code",[t._v("dep.notify()")]),t._v(" 去通知订阅者去做相应的逻辑处理，我们把这个过程叫派发更新。")]),t._v(" "),a("p",[t._v("其实 "),a("code",[t._v("Watcher")]),t._v(" 和 "),a("code",[t._v("Dep")]),t._v(" 就是一个非常经典的观察者设计模式的实现。")]),t._v(" "),a("blockquote",[a("p",[t._v("在实例初始化时，需要将data、props、computed等属性添加到实例上，并给每一个被观察对象都添加一个 observer 实例，给对象的属性添加 getter 和 setter，用于依赖收集和派发更新。")]),t._v(" "),a("p",[t._v("创建observer实例时，会遍历对象的每个属性，并给每个属性调用"),a("code",[t._v("defineReactive")]),t._v("方法。每个属性都会添加一个dep实例，每个dep实例都维护一个订阅者容器 subscribers（subs）；然后使用 "),a("code",[t._v("Object.defineProperty")]),t._v(" 方法，给对象属性添加 getter 和 setter。当对象触发getter时，通过 "),a("code",[t._v("dep.depend()")]),t._v(" 进行依赖收集，将watcher实例添加进 subscribers 容器中，也就是把watcher收集到依赖中。当对象数据发生变化时，触发setter，然后调用 "),a("code",[t._v("dep.notify()")]),t._v(" ，遍历 subscribers 容器中的每个watcher，然后调用 watcher 中的方法进行更新，完成相应的逻辑处理。")])]),t._v(" "),a("h4",{attrs:{id:"render-watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-watcher"}},[t._v("#")]),t._v(" Render Watcher")]),t._v(" "),a("p",[t._v("实例在 "),a("code",[t._v("mountComponent")]),t._v(" 挂载时会首次渲染，然后生成一个 "),a("code",[t._v("render watcher")]),t._v("，递归访问实例的所有属性，并触发它们的getter。在渲染的过程中完成对实例属性的依赖收集，"),a("s",[t._v("然后初始化的时候就会执行它们的回调函数")]),t._v("。")]),t._v(" "),a("p",[t._v("Render Watcher被派发更新以后，会调用在实例化watcher时传入的updateComponent方法，会触发组件更新并重新渲染生成新的vnode，然后patch更新到DOM上。Watcher内部有个id，在更新队列中会做排序，Render Watcher是最后被更新的。")]),t._v(" "),a("p",[t._v("在渲染的时候访问过这个值，才会生成一个 "),a("code",[t._v("render watcher")]),t._v("，这样修改这个值的时候才会触发DOM更新，才会响应式更新视图。换句话说，没有绑定在视图(模板)上的响应式数据，即使更改了数据，也不会触发重新渲染和视图更新。")]),t._v(" "),a("h4",{attrs:{id:"computed-watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-watcher"}},[t._v("#")]),t._v(" computed watcher")]),t._v(" "),a("p",[t._v("初始化computed属性时，也会生成一个 "),a("code",[t._v("computed watcher")]),t._v("，不同于其它的watcher，computed watcher的内部做了优化，当计算属性的计算的最终值发生变化时，才会触发watcher并重新渲染，而不是计算属性依赖的值发生变化时就更新。")]),t._v(" "),a("h2",{attrs:{id:"watcher"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watcher"}},[t._v("#")]),t._v(" Watcher")]),t._v(" "),a("p",[a("code",[t._v("Watcher")]),t._v(" 的构造函数对 "),a("code",[t._v("options")]),t._v(" 做的了处理，")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deep\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("computed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("computed\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sync "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sync\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("computed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sync "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("所以 "),a("code",[t._v("watcher")]),t._v(" 总共有 4 种类型")]),t._v(" "),a("ol",[a("li",[t._v("deep watcher\n"),a("ul",[a("li",[a("code",[t._v("deep: true")]),t._v("，会对一个对象做深层递归遍历进行依赖收集和派发更新")])])]),t._v(" "),a("li",[t._v("user watcher\n"),a("ul",[a("li",[t._v("实例的 option 中定义的 watch 属性，或者通过 "),a("code",[t._v("vm.$watch")]),t._v(" 创建的 "),a("code",[t._v("watcher")]),t._v(" 是一个 "),a("code",[t._v("user watcher")])])])]),t._v(" "),a("li",[t._v("computed watcher")]),t._v(" "),a("li",[t._v("sync watcher\n"),a("ul",[a("li",[a("code",[t._v("immediate: true")])]),t._v(" "),a("li",[t._v("当响应式数据发生变化后，触发了 "),a("code",[t._v("watcher.update()")]),t._v("，只是把这个 "),a("code",[t._v("watcher")]),t._v(" 推送到一个队列中，在 "),a("code",[t._v("nextTick")]),t._v(" 后才会真正执行 "),a("code",[t._v("watcher")]),t._v(" 的回调函数。而一旦我们设置了 "),a("code",[t._v("immediate")]),t._v("，就可以在当前 "),a("code",[t._v("Tick")]),t._v(" 中同步执行 "),a("code",[t._v("watcher")]),t._v(" 的回调函数")])])])]),t._v(" "),a("p",[t._v("计算属性本质上是 "),a("code",[t._v("computed watcher")]),t._v("，而侦听属性本质上是 "),a("code",[t._v("user watcher")]),t._v("，但通过设置deep或者immediate，又可以衍生出 "),a("code",[t._v("deep watcher")]),t._v(" 和 "),a("code",[t._v("sync watcher")])]),t._v(" "),a("h2",{attrs:{id:"简易polyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简易polyfill"}},[t._v("#")]),t._v(" 简易Polyfill")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("depend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeUpdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeUpdate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscribers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("sub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" internalValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在getter收集依赖项，当触发notify时重新运行")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("depend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" internalValue\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setter用于调用notify")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newVal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" changed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" internalValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" newVal\n        internalValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newVal\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("changed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          dep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("notify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" activeUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("autorun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("wrappedUpdate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    activeUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wrappedUpdate\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    activeUpdate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrappedUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"父子组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件"}},[t._v("#")]),t._v(" 父子组件")]),t._v(" "),a("h3",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" props")]),t._v(" "),a("p",[t._v("会进行规范化、初始化，将props变为响应式数据.")]),t._v(" "),a("p",[a("code",[t._v("this.$props")])]),t._v(" "),a("ul",[a("li",[t._v("当前组件接收到的 props 对象")])]),t._v(" "),a("p",[a("code",[t._v("vm.$attrs")])]),t._v(" "),a("ul",[a("li",[t._v("包含了父作用域中不作为 prop 被识别 (且获取) 的 attribute 绑定 ("),a("code",[t._v("class")]),t._v(" 和 "),a("code",[t._v("style")]),t._v(" 除外)。")])]),t._v(" "),a("p",[t._v("修改props触发子组件重新渲染的情况有两种：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("prop")]),t._v(" 值被修改\n"),a("ul",[a("li",[t._v("子组件直接修改props值时，只会触发子组件的re-render，而且会有[Vue warn]告知当父组件重新渲染时，这个修改的值会被父组件的状态所覆盖")]),t._v(" "),a("li",[t._v("做依赖收集的是在子组件初始化的initProps时被添加到实例上的prop属性名，只要子组件模板中有使用，也就是在渲染时访问过这个属性名，它的render watcher就会被依赖所收集，在修改prop值触发setter时被派发更新，然后就会重新渲染子组件。")])])]),t._v(" "),a("li",[t._v("对象类型的 "),a("code",[t._v("prop")]),t._v(" 内部属性的变化\n"),a("ul",[a("li",[t._v("当子组件直接修改对象类型的props时，会修改到父组件的状态，触发父组件和子组件的re-render")]),t._v(" "),a("li",[t._v("修改对象类型的props的属性时，与上面不同，子组件的这个prop值并不会触发setter，而是会修改到父组件的状态，从而触发父组件中的这个值的setter，由它来派发更新，但是只要子组件模板中有使用这个值，父组件和子组件的render watcher就都会被触发")])])])]),t._v(" "),a("p",[t._v("子组件的 "),a("code",[t._v("prop")]),t._v(" 值始终指向父组件的 "),a("code",[t._v("prop")]),t._v(" 值，只要父组件的 "),a("code",[t._v("prop")]),t._v(" 值变化，就会触发子组件的重新渲染.")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v(".sync")]),t._v("和"),a("code",[t._v("$emit")]),t._v("的方式修改props时，无论是基本数据类型或者是对象，都会触发父组件和子组件的re-render")]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":post")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":author.sync")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post.author"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":num.sync")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n这种情况下，如果子组件中修改author，也会导致父组件的post中的author被修改\n")])])]),a("h2",{attrs:{id:"其它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000022772025",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue 数据更新了但页面没有更新的 7 种情况汇总及延伸总结"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("无法检测实例被创建时不存在于 "),a("code",[t._v("data")]),t._v(" 中的 property")]),t._v(" "),a("li",[t._v("无法检测对象 property 的添加或移除")]),t._v(" "),a("li",[t._v("无法检测通过数组索引直接修改一个数组项")]),t._v(" "),a("li",[t._v("无法检测直接修改数组长度的变化")]),t._v(" "),a("li",[t._v("在异步更新执行之前操作 DOM 数据（"),a("code",[t._v("vm.$el")]),t._v("）不会变化")]),t._v(" "),a("li",[t._v("循环嵌套层级太深，视图不更新（vm.$forceUpdate()，但通常不应该用到）")]),t._v(" "),a("li",[t._v("路由参数变化时，页面不更新（组件被复用，数据不更新，可以监听 "),a("code",[t._v("$route")]),t._v("然后修改数据）")])]),t._v(" "),a("p",[t._v("只是没有被响应式立即更新，但是当下一次修改触发更新时，只要数据是变化的，那么之前没有响应式立即更新的视图也会被一起补上")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bbbb'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cccc'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上面两个修改都不能响应式更新视图")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是当发生一个响应式修改时，上面的两个修改也会被应用上，即使不在同一个处理函数中，例如一个在mounted，一个在点击事件的回调")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以改动数组或对象，只要保证最后一次修改能响应式更新即可")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some value'")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mounted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleClick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("对数组的处理需要特化出来以提高性能。")]),t._v(" "),a("p",[t._v("1）通过数组索引直接修改一个数组项")]),t._v(" "),a("p",[t._v("本来Object.defineproperty()是可以劫持数组的，但是这样开销很大，所以没有使用。不过可以使用"),a("code",[t._v("Vue.set")]),t._v("指定成员进行监听。")]),t._v(" "),a("p",[t._v("2）Object.defineproperty()监听不到数组的增加或删除的")]),t._v(" "),a("p",[t._v("重写了数组的原型，修改数据原型上的方法，对数组的修改进行拦截，然后响应式修改")])])}),[],!1,null,null,null);s.default=e.exports}}]);